vvl getE(int n) {
	vvl ret(n, vector<ll>(n));
	for (int i = 0; i < n; ++i) ret[i][i] = 1;
	return ret;
}
vvl operator +(const vvl& A, const vvl& B) {
	vvl ret = A;
	for (int i = 0; i < sz(A); ++i)
		for (int j = 0; j < sz(A[0]); ++j)
			ret[i][j] = (ret[i][j]+B[i][j])%MOD;
	return ret;
}
vvl operator *(const vvl& A, const vvl& B) {
	int a = sz(A), b = sz(A[0]), c = sz(B[0]);
	vvl ret(a, vector<ll>(c));
	for (int i = 0; i < a; ++i)
		for (int j = 0; j < c; ++j)
			for (int k = 0; k < b; ++k) {
				ret[i][j] += A[i][k] * B[k][j];
				ret[i][j] %= MOD;
			}
	return ret;
}
vvl pow(const vvl& A, int p) {
	if (p == 0) return getE(sz(A));
	if (p&1) return A*pow(A, p-1);
	vvl B = pow(A, p>>1);
	return B*B;
}
