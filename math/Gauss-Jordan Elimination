bool equal(double a, double b) {
	double diff = fabs(a-b);
	if (diff < 1e-10) return true;
	return diff < 1e-8 * max(fabs(a), fabs(b));
}
VI makeRREF(vector<vector<double>>& A) {
	int n = A.size(), m = A[0].size();
	VI entry(n, -1);
	int cur = 0;
	
	for (int i = 0; i < n; ++i) {
		while (cur < m) {
			int j = i;
			while (j < n && equal(A[j][cur], 0)) ++j;
			if (j < n) {swap(A[i], A[j]); break;}
			++cur;
		}
		if (cur == m) break;
		entry[i] = cur;
		
		double div = A[i][entry[i]];
		for (int k = entry[i]; k < m; ++k)
			A[i][k] /= div;
		
		for (int j = i+1; j < n; ++j) {
			double mult = A[j][entry[i]];
			for (int k = entry[i]; k < m; ++k)
				A[j][k] -= A[i][k] * mult;
		}
	}
	for (int i = n-1; i > 0; --i) {
		if (entry[i] == -1) continue;
		for (int j = 0; j < i; ++j) {
			double mult = A[j][entry[i]];
			for (int k = entry[i]; k < m; ++k)
				A[j][k] -= A[i][k] * mult;
		}
	}
	return entry;
}
