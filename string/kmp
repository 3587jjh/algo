// pi[i] = t[...i]의 접미사도 되고 접두사도 되는 문자열의 최대 길이
VI getPi(const string& t) {
    VI pi(t.size(), 0);
    int begin = 1, mch = 0;

    while (begin + mch < t.size()) {
        if (t[mch] == t[begin + mch]) {
            ++mch;
            pi[begin + mch - 1] = mch;
        }
        else {
            if (!mch) ++begin;
            else {
                begin += mch - pi[mch - 1];
                mch = pi[mch - 1];
            }
        }
    }
    return pi;
}

void kmp(const string& s, const string& t) {
    VI pi = getPi(t);
    int begin = 0, mch = 0;
	
    for (int i = 0; i < s.size(); ++i) {
        while (begin + mch == i) {
            if (mch < t.size() && t[mch] == s[i]) {
                ++mch;
                if (mch == t.size()) {
                    // do something
                }
            }
            else {
                if (!mch) ++begin;
                else {
                    begin += mch - pi[mch - 1];
                    mch = pi[mch - 1];
                }
            }
        }
    }
}
