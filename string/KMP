// pi[i] = t[...i]의 접미사도 되고 접두사도 되는 문자열의 최대 길이
VI getPi(const string& t) {
    VI pi(t.size(), 0);
    int begin = 1, mch = 0;

    while (begin + mch < t.size()) {
        if (t[mch] == t[begin + mch]) {
            ++mch;
            pi[begin + mch - 1] = mch;
        }
        else {
            if (!mch) ++begin;
            else {
                begin += mch - pi[mch - 1];
                mch = pi[mch - 1];
            }
        }
    }
    return pi;
}

void kmp(const string& s, const string& t) {
    VI pi = getPi(t);
    int mch = 0, i = 0;

    while (i < s.size()) {
        if (mch < t.size() && s[i] == t[mch]) {
            ++mch; ++i;
            if (mch == t.size()) {
                // do something
            }
        }
        else if (mch) mch = pi[mch-1];
        else ++i;
    }
    return ret;
}
